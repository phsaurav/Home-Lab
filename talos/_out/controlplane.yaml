# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: q1xpca.jyq3aspe2b8wvz07
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJZdFlzWkFhcFBjelFUckFwZUd5R3FNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5URXdNRFF3T0RBM01qQmFGdzB6TlRFd01ESXdPREEzTWpCYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBY0J6TkJoaHowNDFZajJPSjFQRHd0SktXMDlkK0lwTERHQm0wCk8wNnkyUEdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVdVNJM2ZtRHkrTmo2bUNZUApXN21aTCsrM3oyVXdCUVlESzJWd0EwRUFkN2hRYnVOYVYwSFFZOEx0dHZVUjdlMHhsMUxreGdFTXI3Vnc3b1FQCkpQSk5LT3VHaUpBTFhSdER6TVc2ck00ZTI3bWN1YmRhR3NrT3l4TXgvSitTQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQXB2cWhRL29mdFBQQ0d6VnZyR0ViVGJFS3Vjc1dJUEl4d25yUE1oVWtRYwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.34.0
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw
        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true
        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider
        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network: {}
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.0/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #     driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #       driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #           driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # Enable STP on this bridge.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Configure this device as a bridge port.
    #       # bridgePort:
    #       #     master: br0 # The name of the bridge master interface
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1
    # # Used to statically set arbitrary search domains.
    # searchDomains:
    #     - example.org
    #     - example.com
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/sda
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.11.1
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
            forwardKubeDNSToHost: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # Configures the node labels for the machine.
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
        # # Provides machine specific control plane configuration options.
        # # ControlPlane definition example.
        # controlPlane:
        #     # Controller manager machine specific configuration options.
        #     controllerManager:
        #         disabled: false # Disable kube-controller-manager on the node.
        #     # Scheduler machine specific configuration options.
        #     scheduler:
        #         disabled: true # Disable kube-scheduler on the node.
        # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
        # # nginx static pod.
        # pods:
        #     - apiVersion: v1
        #       kind: pod
        #       metadata:
        #         name: nginx
        #       spec:
        #         containers:
        #             - image: nginx
        #               name: nginx
        # # Allows the addition of user specified files.
        # # MachineFiles usage example.
        # files:
        #     - content: '...' # The contents of the file.
        #       permissions: 0o666 # The file's permissions in octal.
        #       path: /tmp/file.txt # The path of the file.
        #       op: append # The operation to use
        # # The `env` field allows for the addition of environment variables.
        # # Environment variables definition examples.
        # env:
        #     GRPC_GO_LOG_SEVERITY_LEVEL: info
        #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
        #     https_proxy: http://SERVER:PORT/
        # env:
        #     GRPC_GO_LOG_SEVERITY_LEVEL: error
        #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
        # env:
        #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
        # # Used to configure the machine's time settings.
        # # Example configuration for cloudflare ntp server.
        # time:
        #     disabled: false # Indicates if the time service is disabled for the machine.
        #     # description: |
        #     servers:
        #         - time.cloudflare.com
        #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
        # # Used to configure the machine's sysctls.
        # # MachineSysctls usage example.
        # sysctls:
        #     kernel.domainname: talos.dev
        #     net.ipv4.ip_forward: "0"
        #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
        # # Used to configure the machine's sysfs.
        # # MachineSysfs usage example.
        # sysfs:
        #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
        # # Configures the udev system.
        # udev:
        #     # List of udev rules to apply to the udev system
        #     rules:
        #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
        # # Configures the logging system.
        # logging:
        #     # Logging destination.
        #     destinations:
        #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
        #           format: json_lines # Logs format.
        # # Configures the kernel.
        # kernel:
        #     # Kernel modules to load.
        #     modules:
        #         - name: brtfs # Module name.
        # # Configures the seccomp profiles for the machine.
        # seccompProfiles:
        #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
        #       # The `value` field is used to provide the seccomp profile.
        #       value:
        #         defaultAction: SCMP_ACT_LOG
        # # Override (patch) settings in the default OCI runtime spec for CRI containers.
        # # override default open file limit
        # baseRuntimeSpecOverrides:
        #     process:
        #         rlimits:
        #             - hard: 1024
        #               soft: 1024
        #               type: RLIMIT_NOFILE
        # # Configures the node annotations for the machine.
        # # node annotations example.
        # nodeAnnotations:
        #     customer.io/rack: r13a25
        # # Configures the node taints for the machine. Effect is optional.
        # # node taints example.
        # nodeTaints:
        #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: SXM7HPrhLWT6tgIi3MpqG5zjWJm3G5mIxLVZ0JFsXTk=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ol1d4srJSevayUlCKfZqAmsdWAIDCPcPIEPpz5ILTuE=
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.11.101:6443
    # Configures the cluster's name.
    clusterName: talos-k8s
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: d8wyof.9ppbn56vzb15snvp
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: 5VYB2hhDQ9YyqWQZ8soQ64PmE1Ka8+CiI1a5MVCdaGQ=
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRRWlkY25nazA5cEJHTzVxRHU3TkZYVEFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTFNVEF3TkRBNE1EY3lNRm9YRFRNMU1UQXdNakE0TURjeQpNRm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCTVZOcmRpNlRaakMyYkFvZk9iWXk0VDBMMzNaa1h0TUZRbzh2dzRjS2JtMU10YmtlbGJxeUMxRHkzMHUKVGN5K1k4M2s2bDUwQmQwS2s2WlVkbjJQWStlallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVyR0ozUnMxT1owSVA4QXlCZ2dkUTJsQi9zOTB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQUl4UFlpaHIKOWkvVnhwNzFja0grbnBxYjluL3ViZGl0MThoUm9UenNadm1hQWlCOWplSExEMDVoazVLd1RXdmoxMFF4UkZoRQpmQWVOM0R3QTJrNWx2U1JTNVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUpHQ1NXY1FpMDdybm1aME5YMTRtRUJZYW1HSGo3cG9rQlhXSHlJWWFKQWlvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFeFUydDJMcE5tTUxac0NoODV0akxoUFF2ZmRtUmUwd1ZDankvRGh3cHViVXkxdVI2VnVySQpMVVBMZlM1TnpMNWp6ZVRxWG5RRjNRcVRwbFIyZlk5ajV3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRVzdkcFhkS3d5b0NDR0gyWWxxMDJuekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJMU1UQXdOREE0TURjeU1Gb1hEVE0xTVRBd01qQTRNRGN5TUZvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTThRQnpuVmxTY2NuajJUbUt1S2dlMERLd3QvNUlpMXE5dXNFcFVubkZVdVZJakdIZCtlCmZOUStjNFdrMEdSVnVBcWpMQS9XTit1WWpwRWdGd2NhNEd5allUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVYYXFBYnA0Uk0ydU5oaXJUVElLdmlUb3VRTWd3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloCkFPZTRFZVFGa3hHM0U3TlRsaU1jc0RvWUdONm1OQjQyMGVMZ0Z0UXBxbzV5QWlCNDBpRVhWTkxuYUVlN29kYjQKUENVNkFhaEpCMTZQVmtKVm01aHFOSXgrT0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU1vZlIwKzVjQXNFdjZ2aHI0ZENkMzhoWHd1blRiOG1GQnJyQ25VOS9BU2dvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFenhBSE9kV1ZKeHllUFpPWXE0cUI3UU1yQzMva2lMV3IyNndTbFNlY1ZTNVVpTVlkMzU1OAoxRDV6aGFUUVpGVzRDcU1zRDlZMzY1aU9rU0FYQnhyZ2JBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBcWpmK0hHT0JoMCsvL0kyTDdWOXVwdmMvZ0V5ZEo1T1RIWXRXYVNBcnlBS0cyTjRRCkk2b21GWFRtM0RINUN2N0EvRkRhQlAzYU5zeXQ3U000azNIclBwNzNJdlFSQVBBMHllbC9jYVMvWjZIc0pnU3cKQXZlUGZHR0tLSzgvZ3NsMHJlcXJCY205d3hWRDZqNWNoSnZ2RkdwbHc4cG9FeVVyVk9IVzlNYjBSSGU5L0JjQQpPK29NcW1wOTNXVSttdUxKek5nN1p4VWJ1VlhxMU4rTzBucDZ1M3pyRXFFNTZJUnprZS81YzZXTk9YRjdaWFRoCjZHYVMvZFhWdTVDWWFvZnhTbE5Rb1NaOC83RkJlcWxEOVdybk5lWkJRZi8vOSttcnFOUkR4UTFOT2ZDRnBGY3YKRDVPQ3JaQXllWThjcmFTcGJDZ1I5ZjlCbytwV2c1ejdSTGlMLzVoUXpaMzExWGlDNkxvY3dSOWs3YUdtMmR4bApkQmhqcS92bnpYT1pZZ3JZZEJJNGlrZ050dG81NlNGczNIc2tRZW01djBUakliczduUjB6WExoQ05jMEFrU1NKCkRPSS9mRlE5czB4b2dpeWZPTlJVWndZc2FMUkY2Q2J4TnVpL0doMEMzZjJMSHB3NEgrZ2JoYkIwSGFhTCsvRFIKN3laaVEzdmpSSVlvcXZTNnB6TzBHc0pWNWtrQzc0VVVLRlBaRVFyTUZvd3R5cWUwSGZ1eHUremZveVY2MlI2Two0dURCQ3lBWkFHV2pkRVdpZm92YzdTRzB1TVlBQUtHUTExcDBhcnZQMTQ2Y1cyZWRwamVQVE1MUjhXR3paVFM1CjNCRlFYc21NSzd1Y2g3OC9lOU5pc3ZtVkFNdlB6am5EZ0xGcU1aMFM0SjB4clEwQlVOTjNTRjV0Ulg4Q0F3RUEKQVFLQ0FnQW05NWlCc1RubTJ4ZnRYZzRKY2s1bmhMU1J6M2d1cGpjSWpXeGp0b3l2UmZ6T3lzOVJDdE9iRjk3OQp5NmJpb0gxWGhiN1RZN1cvMDgyQk93M3BteXVxYzBQS1NhdFcxcWFQRHBneFVQRE1iYUljOWZmQlJpRWY3VWh1CmxlZnBMZXM3SVR5em40S0VsV3F0eGtieHlLekx0S3ZGVGFIVHVDK2FSL1VvcGg4blNXNUJ0cFpFSVFselBkdkEKZ2p2NXd5OUZhTDc0a3psOGpUR3NOOTEvUzdDckdTYkxaZ05XdW5PbWxoUTZLRTBUT0dweVNIYXErRWh3T2JLcgpOS2ZmdzIwMmdhbzBxaFgxaHdPaGEveDF3MXBZMlhSWkFwejdpUS9XSDNuQU01SlpVRG1YN0ttR1hGT1BIaktmCjUyWStUakxHNHNseDBsU1pqTHp2ZGxHRFl1Z1JaSkJseUJTVGlkdkVCUGp4NHdoa2t3WUhDVitWMWZUekc4VUQKdzNLV3R0NHlob1pJa1huU3UwRVJQWWU1QVpReDNEMmtQY2s0Q0V0MGI1aVArYVQxNHhaRS92WVdyanVESU5xaAprQUl2dFFoWkdmN2FPN0xSekkweTdLYy9vQVNjM3ZzbzZXOS8xdjdDcVBNNk4rL1JXOUJ5Y0N3KzZtZ0J4eFpBClRORmFVNXJQcWV2bXFKNTdtNTBTU0h0TGM1TzZEV1ZLQTZkbkV1MFNnamFYL3RRMzBIakNHdWZUM25aOVZadGsKZUtyYmJnZ0gyRUlOWFppd3kxVzRXYUIrclNSTHJNemMyL0NjeloydHkzY085WS9wTDFGbWlsYml4VUFhY1FoZQpHajg0b1g4YmlmUG4wZ1RqTkdlR0xWYmp1UDN3N2NKa29NdWNGLzF3M3Y0dk1QRWFhUUtDQVFFQTEvWDdlemRSClVPTWg2MFNKY0d5ZVpLRVZiTHFaREJQaHRiZjM0N1RjOFlGdHZNRk1XeVFpak1TM3NBWEcraGNYK2xHL1JnY2EKUFhKTmd2RWZYRW5HbXluSEJrVG1HUE9nQ0VsdXVuVG9JT0ZkUDhjNVhrY0xrUzB4RFlwZlQ5UWNvT3hTSzYwRwpKdFZnQ1k1dFRwelhWWHJqaUhkQ0ZhdW5iMW15NHpHUlllVmdsR1NpVkdKRm9VN1JBS01nLzd0WE0rN0FCOHhUCnJrclhqVFZSZm9Bb2RyU2Y2ZGVXTUtjeWx2eUNuSmZKbHFkd09BSGFYaGdIeER1ZlZtcEdEdFpDQmo5OXhxZmYKWGFrOU5JeThoYWE1SHJaYVR4VHBSZHJ1YzNUTWFaNVZySm80dEsxUG0rRTRHUmJidWN5Nk5GSy91UjVRb05HUgpNMldwQWh5NGFVLzZPd0tDQVFFQXljYjZtZ0tmUnliZVUxdkNzcngxVldEckQ0RmZEcWNyZ1dDT3l2b0lydG1FCmpqUlJkNHR3RTNJM041d3MrbDRqZGZWZ3ZLVnVFUjZIaVBsRWVKcUxFMEpOdlgvQ2N1czVwTDBHNk9CR0lBTUgKcGhmaHNxbDJtekFSRTRkdG9VWmRwS0U4OWRqUmUra2xRNTVrL2s5eU5hcWdUazNUYmU1aTNsQUNCL09WR0Y0bgpHQTYwbWt2eGJrN3JOenpNbFB6Uk5zRVhYZko1RVVOZXhxWnNBc1M0dXVFanNlU29WR1djTXNKQ2NEVnJPaWhsCktGUkRVS2Z0OEhrblRvUEhhTDdKZnFESjFyMmx5ZXpZRzYrY21XWGUyS2hHVlRKVktYOGFGRWdWNjdYVkdaaEMKWnZzY3l5OWk2UzBKSlNiMS9xaWFkSFZpSnBYNnVGTllCY25IQ1JjcGpRS0NBUUVBcVdPYkdRNU9qYTlaejNzMgpnaVB3S09YZ05DUTRIeTBKQU11SGQrZEkxWFM3YWk0RGdnbFp3Q2djRzhpc1JVVVAzWnQ0OTZoaWdJZkRIRTJjClYzcldlS1hRSWE2dy9DazdBTVQ0UU8rcGt3Q3hiM0VJSWxaL1VDT3VNZnl5dlo2VnhmTVdrSU5xSzlONVBJV20KWHQ3T1Y1SElIaVhNZzhyYnpZOEJyUW9ZQ2owci83amZTbWk2VE1mUlR6cWtpM0daK0hYdjBTNEhCTkpYTjc3MgphTTZFN25iR1oxaGR5Vk9iYnFvb21FTEdMNUN0aUlDTGt2b3VQVkMycmNVMXBqV1FHKzU0N1BTSFVxT0lDa3ZKCkl0dWVuK1JQK1c5aGVSVTdxdnVWeWRJVFNRcStKNWs0cy85M1ROYU5DYkwyNmt0dGJmbkZMQjYwVVNnUDVFUTYKc1ArMk9RS0NBUUEyT2ppdFhWa0xHVUlVNnd0SFYraTh1bUJSK1hYZmpVUGU4R0ZQNGFTbHdTV2p4aUhDM0FHUgo2RmM0cGN0Y3VpSVRtSStZQTJteVJoOHN5N2tBSktDTjIzcmpHOHZaY0tnOFF1VHhmeHk1aTdicGgyK0x3WWx6CnFaWmRSajlMWVlyWExOSWlURlA0Vmk5Q25mWU1kck4rQXM0MFhTd2VWanZSL1hTZVNITmdhaVZkak00eXpZZ2sKR2llUzM4OG5sMDV1eGJRTzlwUmM5RnNyVGh5bkhkRjd2L2dFM2l2ekNwL1E4RzVFazhhdWlaNnVHUDlDVk85WQplbWI2N2VXUW0vMncvMnRmUC9hbmJ2U2hkQy9FOWlETzMyS1BrUWhjTDZHRm85M29UQ1RxVFFaRGdPYzdJQkFZCkZKZHBtYS93OGNVWTJWYzRnWVF4TjR6bmVWUDVlSFVkQW9JQkFEb01xZnovYUhEVnJMWUVYUHpPcVAvWWxwUGsKY0ZmSVNITittaHVXS1VGUEdUWDFULzBRM3VidWxBdWUxY1lhWC9OK3pVbmxFeHdvdHZ5bkZLRFV3K0NwcFhsbApRKzRYMjgxbHgveXg3RWE2V0hnY3NYTGRLOHZ5MzlhYWVNZVdxSS93ckxtZHN0SnllR2dIbG4yU1JrWk9tRi9OCkRsRHVhaE16K0ZQdGJDQlZIN1JMQmhodytXL0YvaURhTFAvSWxOWWJZdUJQaC91eS9CNXFJVWpqeko0NDVESXQKem1HU09hY0lwa2xsUEQrZGNNRHpFdktPM2VBQmJnM0RBMjFNNUdQNVNVaDQ4Z0tqdER6bXl6OEhTdVJSY3ZhbApxcXAyMmZzMzVoZ01lTFo0Vk44YkVTV2hTZnA1cW9RdllWcHFLWnFFQWZZOEtPYXVwYlhDdlNpY0pkWT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.34.0
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.11.101
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
                  # # Configure the API server authorization config. Node and RBAC authorizers are always added irrespective of the configuration.
                  # authorizationConfig:
                  #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
                  #       name: webhook # Name is used to describe the authorizer.
                  #       # webhook is the configuration for the webhook authorizer.
                  #       webhook:
                  #         connectionInfo:
                  #             type: InClusterConfig
                  #         failurePolicy: Deny
                  #         matchConditionSubjectAccessReviewVersion: v1
                  #         matchConditions:
                  #             - expression: has(request.resourceAttributes)
                  #             - expression: '!(\''system:serviceaccounts:kube-system\'' in request.groups)'
                  #         subjectAccessReviewVersion: v1
                  #         timeout: 3s
                  #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
                  #       name: in-cluster-authorizer # Name is used to describe the authorizer.
                  #       # webhook is the configuration for the webhook authorizer.
                  #       webhook:
                  #         connectionInfo:
                  #             type: InClusterConfig
                  #         failurePolicy: NoOpinion
                  #         matchConditionSubjectAccessReviewVersion: v1
                  #         subjectAccessReviewVersion: v1
                  #         timeout: 3s
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.34.0
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.34.0
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.34.0
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmekNDQVNTZ0F3SUJBZ0lSQU9XeU9hcG1jeXIzeU1OQ0dHK3JnMW93Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TlRFd01EUXdPREEzTWpCYUZ3MHpOVEV3TURJd09EQTNNakJhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSWUduUncyNkN3CnpGKzVhdmY0T0taK0pReHVmYWRGNFBEdUZwVU5pSVozYWhNQjB5QTVudy9Qc0hVSFNHUUdSNGlsMGVUS2RYTHUKZGhxamhFT3FWeW56bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkVyWGhyQjAySXNRCitwQ1RXUlFnUW1KVU5PeG5NQW9HQ0NxR1NNNDlCQU1DQTBrQU1FWUNJUURpZzY4YmNsbVNXN2pnVzgrWGpRcmgKMTIvMTRxN01lbFZOUURmUzFiV3krUUloQUxWcWtjakdhU1ppVG8xbDVQaU44enVLVjBLZEhsckJGZ0lVekZyTApPV3NGCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZUYnFybVFUelhpalRxOUVZdXRVRnF5NktuSEVjdGlqTXlyNStXR2U0SnBvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFV0JwMGNOdWdzTXhmdVdyMytEaW1maVVNYm4yblJlRHc3aGFWRFlpR2Qyb1RBZE1nT1o4UAp6N0IxQjBoa0JrZUlwZEhreW5WeTduWWFvNFJEcWxjcDh3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
            # # The container image used to create the etcd service.
            # image: gcr.io/etcd-development/etcd:v3.6.4
            # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
            # advertisedSubnets:
            #     - 10.0.0.0/8
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
# # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
# # Decryption secret example (do not use in production!).
# aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
# # Core DNS specific configuration options.
# coreDNS:
#     image: registry.k8s.io/coredns/coredns:v1.12.3 # The `image` field is an override to the default coredns image.
# # External cloud provider configuration.
# externalCloudProvider:
#     enabled: true # Enable external cloud provider.
#     # A list of urls that point to additional manifests for an external cloud provider.
#     manifests:
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
# # A map of key value pairs that will be added while fetching the extraManifests.
# extraManifestHeaders:
#     Token: "1234567"
#     X-ExtraInfo: info
# # Settings for admin kubeconfig generation.
# adminKubeconfig:
#     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
# # Allows running workload on control-plane nodes.
# allowSchedulingOnControlPlanes: true
